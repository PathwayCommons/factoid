# JSON type API.
#
# This is incomplete and poorly tested. It has bugs, and the API
# will change in the next few future versions.
#
# Initial spec:
# https://github.com/josephg/ShareJS/issues/30

json = require './json' if typeof WEB is 'undefined'

toPathArray = (str) ->
	if typeof str is 'string'
		# TODO: Don't split on escaped '.'s
		str.split '.'
	else
		str

json['api'] =
	'provides': {'json':true}

	# Get the object
	'getObject': -> @snapshot

	'set': (path, value) ->
		path = toPathArray path
		throw new Error 'Not implemented'

	'get': ->
		path = toPathArray path
		elem = @snapshot
		for p in path
			elemType = typeof elem
			if elemType == 'string' or elemType == 'number' or elemType == 'undefined' or elem == null
				throw new Error "Cannot index into element #{elem} - Path or object invalid."
			else
				elem = elem[p]
				
		elem
	
	'wrap': (path) ->
		path = toPathArray path

		Doc = ->
			#@snapshot = 

			@submitOp = (op) ->
				@snapshot = type.apply @snapshot, op

			@_register()
			this

		Doc.prototype = type.api
		MicroEvent.mixin Doc
	
	'_register': ->
		# This renaming business is getting beyond rediculous.
		@['on'] 'remoteop', (op) ->
			for component in op
				if component['i'] != undefined
					@['emit'] 'insert', component['i'], component['p']
				else
					@['emit'] 'delete', component['d'], component['p']
