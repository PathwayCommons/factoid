@import "animate"; // remove this import if you don't want css3 animations

@extendoButtonSize: 1.5em;
@extendoBg: #ddd;
@extendoBorder: #ccc;
@extendoTextColor: #000;
@extendoPadding: 0.1 * @extendoButtonSize;
@extendoExpanderBg: #54AFE8;
@extendoExpanderTextColor: #fff;

.extendo {
	position: fixed;
	margin: 0.5em;
	z-index: 9999;
	overflow: hidden;
	padding: @extendoButtonSize/4 0;
	height: @extendoButtonSize + 2*@extendoPadding;

	// override animation time from animation.css
	.animated {
		-webkit-animation-duration: 0.25s;
		-moz-animation-duration: 0.25s;
		-ms-animation-duration: 0.25s;
		-o-animation-duration: 0.25s;
		animation-duration: 0.25s;
	}

	.rotated (@angle: 90deg){
		transform: rotate( @angle );
		-ms-transform: rotate( @angle ); /* IE 9 */
		-moz-transform: rotate( @angle ); /* Firefox */
		-webkit-transform: rotate( @angle ); /* Safari and Chrome */
		-o-transform: rotate( @angle ); /* Opera */
	}

	/* positioning stuff */
		&.bottom { bottom: 0; }

		&.top {	top: 0; }

		&.right {
			right: 0;

			.extendo-container {
				padding-right: @extendoButtonSize + @extendoPadding;
			}

			.extendo-expander {	right: 0; }
		}

		&.left {
			left: 0;

			.extendo-container {
				padding-left: @extendoButtonSize + @extendoPadding;
			}

			.extendo-expander {	left: 0; }
		}

	/* open/closed state stuff */
		&.extendo-state-open {
			.extendo-expander {
				box-shadow: inset 0 0 @extendoButtonSize/2 darken(@extendoExpanderBg, 50%);
			}

			&.left {
				.extendo-container { .animated; .fadeInLeft; }
				.extendo-expander {
					.rotated(-90deg);
				}
			}

			&.right {
				.extendo-container { .animated; .fadeInRight; }
				.extendo-expander  {
					.rotated(90deg);
				}
			}
		}

		&.extendo-state-closed {
			// animations differ depending on position
			// (currently disabled since it doesn't work when hiding w/o breaking the fallback for no css3 animations)
			//&.left .extendo-container { .animated; .fadeOutLeft; }
			//&.right .extendo-container { .animated; .fadeOutRight; }

			.extendo-container {
				visibility: hidden
			}
		}

	/* element styling */
		.button {
			.cornered;

			display: inline;
			display: inline-block;
			border: 0;
			padding: 0;
			font: inherit;
			background: transparent;
			color: inherit;
			height: @extendoButtonSize;
			width: @extendoButtonSize;
			cursor: pointer;
			text-shadow: inherit;
			line-height: @extendoButtonSize;
			text-align: center;
			vertical-align: middle;
		}

		.cornered {
			border-radius: 0.25em;
		}

		.extendo-expander {
			.button;

			color: @extendoExpanderTextColor;
			position: absolute;
			z-index: 2;
			top: 50%;
			margin-right: @extendoPadding;
			margin-left: @extendoPadding;
			margin-top: -0.5 * @extendoButtonSize;
			border: 1px solid @extendoBorder;
			background: @extendoExpanderBg;
			-webkit-tap-highlight-color: transparent;

			@shadowSize: @extendoButtonSize/10;
			box-shadow: 
				inset 0 -@extendoButtonSize/2 @extendoButtonSize/2 darken(@extendoExpanderBg, 25%),
				0 @shadowSize/2 @shadowSize rgba(0, 0, 0, 0.25);
		}

		.extendo-container {
			.cornered;

			background: @extendoBg;
			border: 1px solid @extendoBorder;
			padding: @extendoPadding;

			@shadowSize: @extendoButtonSize/10;
			box-shadow:
				inset 0 -1px 1px #fff,
				0 @shadowSize/2 @shadowSize rgba(0, 0, 0, 0.5);

			.extendo-item {
				.button;

				z-index: 1;
				margin: 0 @extendoButtonSize/4;
				color: @extendoTextColor;
				text-shadow: white 0 1px, white 0 2px, white 0 -1px;
				-webkit-tap-highlight-color: transparent;

				&.extendo-state-disabled {
					opacity: 0.35;
					cursor: default;
				}

				&.extendo-state-active {
					background: darken( @extendoBg, 15% );

					// import animation from animate.css
					.animated;
					.pulse;

					&.extendo-state-togglable {
						box-shadow: inset 0 0 @extendoButtonSize/2 darken( @extendoBg, 50% );
					}
				}

				&.extendo-state-hidden {
					display: none;
				}
			}

		}
}